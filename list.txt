SELECT datetime('now');
datetime(text1, text2), typeof(...), julianday(...), strftime(...), time('now'), date('now'), datetime('now')

SELECT 'Hello, SQLite!' AS greeting;" 
SELECT CAST("0x1A2B" AS INTEGER);

SELECT printf("%d", 0x1A2B); 
INSERT INTO my_table (value) VALUES (12345678900000000000000000000000000000000);

CREATE TABLE test(x INTEGER, y TEXT);
INSERT INTO test VALUES (1, 'a'), (123456789, 'b'), (9223372036854775807, 'c'); -- large ints = varints
SELECT * FROM test WHERE x = 123456789;

CREATE VIRTUAL TABLE my_rtree USING rtree(id, minX, maxX, minY, maxY);

CREATE TABLE t(x INTEGER);
INSERT INTO t VALUES (1), (2), (3), ..., (1000);
ANALYZE;
SELECT * FROM t WHERE x = 500;

CREATE TABLE t(x);
INSERT INTO t(x) VALUES(:myparam);

BEGIN; COMMIT; ROLLBACK;

# does not work from coverage_test
.open test.db
.exit

# 100MB, maybe for unix file-system?
PRAGMA mmap_size = 104857600;

# BLOB: maybe but don't really need it (only small increase)
CREATE TABLE t(x BLOB);
INSERT INTO t VALUES (zeroblob(1000000));
SELECT length(x) FROM t;

# boolean type: not sure if that matters, small increase in coverage
BOOLEAN
TRUE, FALSE

CREATE TABLE t(x);
INSERT INTO t VALUES(1+2);
UPDATE t SET x = x*2;